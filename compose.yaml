services:
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    networks:
      - localnet
    ports:
      - 9000:9000
    volumes:
      - ./portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: "Asia/Dubai"

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    restart: always
    network_mode: host
    privileged: true
    volumes:
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    environment:
      TZ: "Asia/Dubai"
  
  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    restart: always
    networks:
      - localnet
    ports:
      - "1883:1883"
      - "1884:1884"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    environment:
      TZ: "Asia/Dubai"

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    restart: always
    networks:
      - localnet
    ports:
      - 8080:8080
    volumes:
      - ./zigbee2mqtt:/app/data
      - /run/udev:/run/udev:ro
    environment:
      TZ: "Asia/Dubai"
    devices:
      - /dev/serial/by-id/usb-ITead_Sonoff_Zigbee_3.0_USB_Dongle_Plus_1adaccbe4ee7ed11aa466c6262c613ac-if00-port0:/dev/ttyACM0
  
  node-red:
    container_name: "node-red"
    image: "nodered/node-red"
    restart: always
    networks:
      - localnet
    ports:
      - "1880:1880"
    volumes:
      - ./node_red:/data
    environment:
      TZ: "Asia/Dubai"
  
  matter-server:
    container_name: matter-server
    image: ghcr.io/home-assistant-libs/python-matter-server:stable
    restart: always
    network_mode: host
    security_opt:
      - apparmor:unconfined
    volumes:
      - ./matter-server:/data/
      - /run/dbus:/run/dbus:ro

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    restart: always
    environment:
      - ServerIP=192.168.1.158
      - DNS1=1.1.1.1
      - DNS2=1.0.0.1
    networks:
      - localnet
    ports:
      - "192.168.1.158:85:80"
      - "192.168.1.158:53:53/tcp"
      - "192.168.1.158:53:53/udp"
      - "192.168.1.158:443:443"
    volumes:
      - ./pihole:/etc/pihole/
    dns:
      - 127.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN
  
  netdata:
    image: netdata/netdata
    container_name: netdata
    pid: host
    network_mode: host
    restart: always
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - ./netdataconfig:/etc/netdata
      - ./netdatalib:/var/lib/netdata
      - ./netdatacache:/var/cache/netdata
      - /:/host/root:ro,rslave
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    restart: always
    networks:
      - localnet
    ports:
      - '80:80'
      - '81:81'
    volumes:
      - ./nginx_proxy_manager/data:/data
      - ./nginx_proxy_manager/letsencrypt:/etc/letsencrypt

networks:
  localnet:
    driver: bridge